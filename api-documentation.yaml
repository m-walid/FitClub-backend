openapi: "3.0.0"
info:
  description: API documentation for Fitclub application.
  version: 4.2.0
  title: ðŸ’ªFitClub
servers:
  - url: http://ec2-13-36-165-47.eu-west-3.compute.amazonaws.com:3000/api/v1
  - url: http://localhost:3000/api/v1
security:
  - bearerAuth: []
paths:
  /auth/login:
    post:
      security: []
      summary: Logs user into the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      tags:
        - Auth
      responses:
        200:
          description: successful login
  /auth/register:
    post:
      security: []
      summary: Register new user into the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                role:
                  type: string
                  enum:
                    - TRAINEE
                    - COACH
      tags:
        - Auth
      responses:
        200:
          description: Account created successfully
  /auth/verify:
    post:
      security: []
      summary: Validate user using OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                code:
                  type: string
      tags:
        - Auth
      responses:
        200:
          description: Account Verified Successfully
  /auth/send-otp:
    post:
      security: []
      summary: Send new OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      tags:
        - Auth
      responses:
        200:
          description: OTP Code Sent Successfully

  /discovery:
    get:
      summary: Get discovery page data
      tags:
        - Discovery
      responses:
        200:
          description: Discovery page data returned successfully
  /discovery/search:
    get:
      summary: Search programs and coaches
      parameters:
        - in: query
          name: q
          schema:
            type: string
          required: true
          description: Search query
      tags:
        - Discovery
      responses:
        200:
          description: Programs and coaches returned successfully
  /accounts/{id}:
    get:
      summary: Retrieve account by ID
      parameters:
        - in: path
          name: id
          required: true
          description: Enter ID of desired account
          schema:
            type: string
      tags:
        - Account
      responses:
        200:
          description: Account retrieved successfully
    delete:
      summary: delete account by ID
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the account to be deleted
          schema:
            type: string
      tags:
        - Account
      responses:
        200:
          description: Account deleted Successfully
    patch:
      summary: update account by ID
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the account to be edited
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                imgUrl:
                  type: string
      tags:
        - Account
      responses:
        200:
          description: Account edited Successfully
  /accounts/fcm-token:
    post:
      summary: Add FCM token to account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fcmToken:
                  type: string
      tags:
        - Account
      responses:
        200:
          description: FCM token added successfully
  /programs:
    post:
      summary: Add new program
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                imgUrl:
                  type: string
                price:
                  type: number
                programCategory:
                  type: string
                  enum:
                    - Beginner
                    - Intermediate
                    - Advanced
                weeks:
                  type: array
                  items:
                    type: object
                    properties:
                      order:
                        type: number
                      days:
                        type: array
                        items:
                          type: object
                          properties:
                            order:
                              type: number
                            exercises:
                              type: array
                              items:
                                type: object
                                properties:
                                  order:
                                    type: number
                                  reps:
                                    type: number
                                  sets:
                                    type: number
                                  duration:
                                    type: number
                                  exerciseId:
                                    type: string

      tags:
        - Program
      responses:
        200:
          description: Program created successfully
    get:
      summary: Retrieve all programs for coach or trainee
      tags:
        - Program
      responses:
        200:
          description: Programs retrieved successfully
  /programs/has-access/{programId}:
    get:
      summary: Check if user has access to program
      parameters:
        - in: path
          name: programId
          required: true
          description: Enter ID of desired program
          schema:
            type: string
      tags:
        - Program
      responses:
        200:
          description: Program access checked successfully
  /programs/{requestId}:
    post:
      summary: Add program to specific user
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the program request
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                imgUrl:
                  type: string
                price:
                  type: number
                programCategory:
                  type: string
                  enum:
                    - Beginner
                    - Intermediate
                    - Advanced
                weeks:
                  type: array
                  items:
                    type: object
                    properties:
                      order:
                        type: number
                      days:
                        type: array
                        items:
                          type: object
                          properties:
                            order:
                              type: number
                            exercises:
                              type: array
                              items:
                                type: object
                                properties:
                                  order:
                                    type: number
                                  reps:
                                    type: number
                                  sets:
                                    type: number
                                  duration:
                                    type: number
                                  exerciseId:
                                    type: string
      tags:
        - Program
      responses:
        200:
          description: Program Added Successfully
  /programs/{id}:
    get:
      summary: Get a specific program response is different for coach or trainee and both must have access to the program
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the program to be retrieved
          schema:
            type: string
      tags:
        - Program
      responses:
        200:
          description: program with that specific Id returned
    patch:
      summary: Edit a specific program
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the program to be edited
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                imgUrl:
                  type: string
                price:
                  type: number
                programCategory:
                  type: string
                  enum:
                    - Beginner
                    - Intermediate
                    - Advanced
                weeks:
                  type: array
                  items:
                    type: object
                    properties:
                      order:
                        type: number
                      days:
                        type: array
                        items:
                          type: object
                          properties:
                            order:
                              type: number
                            exercises:
                              type: array
                              items:
                                type: object
                                properties:
                                  order:
                                    type: number
                                  reps:
                                    type: number
                                  sets:
                                    type: number
                                  duration:
                                    type: number
                                  exerciseId:
                                    type: string
      tags:
        - Program
      responses:
        200:
          description: program with that specific Id edited successfully
    delete:
      summary: Delete program of specific ID
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the program
          schema:
            type: string

      tags:
        - Program
      responses:
        200:
          description: Program deleted successfully
  /programs/{id}/days/{dadId}/exercies:
    get:
      summary: Get a specific program
      parameters:
        - in: path
          name: programId
          required: true
          description: enter ID of the program to be retrieved
          schema:
            type: string
        - in: path
          name: DayId
          required: true
          description: enter ID of the day to be retrieved
          schema:
            type: string
      tags:
        - Program
      responses:
        200:
          description: exercise of a specific day of a specific program retrieved
  /programs/{id}/reviews:
    get:
      summary: Get a specific program's reviews
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the program desired to retrieve reviews
          schema:
            type: string
      tags:
        - Program
      responses:
        200:
          description: Program reviews with that specific Id returned
    post:
      summary: Add review to specific program
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the program to be reviwed
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                rating:
                  type: number
      tags:
        - Program
      responses:
        200:
          description: Review added to this specific program
  /programs/reviews/{id}:
    patch:
      summary: Edit a specific program review
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the review
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                rating:
                  type: number

      tags:
        - Program
      responses:
        200:
          description: program review with that specific Id edited successfully
    delete:
      summary: Delete review to specific program
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the review
          schema:
            type: string

      tags:
        - Program
      responses:
        200:
          description: Review deleted successfully
  /coaches:
    post:
      summary: Add new coach
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
      tags:
        - Coach
      responses:
        200:
          description: Coach account created successfully
  /coaches/{id}:
    get:
      summary: Get a specific coach
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the account to be retrieved
          schema:
            type: string
      tags:
        - Coach
      responses:
        200:
          description: Coach with that specific Id returned
    patch:
      summary: Edit a specific coach
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the account to be edited
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
      tags:
        - Coach
      responses:
        200:
          description: Coach with that specific Id edited successfully
  /coaches/{id}/programs:
    get:
      summary: Get a specific coach's programs
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the coach
          schema:
            type: string
      tags:
        - Coach
      responses:
        200:
          description: Coach's programs with that specific Id returned
  /coaches/{id}/exercises:
    get:
      summary: Get a specific coach exercises
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the coach desired to retrieve their exercises
          schema:
            type: string
      tags:
        - Coach
      responses:
        200:
          description: Coach exercises with that specific Id returned
  /coaches/{id}/reviews:
    get:
      summary: Get a specific coach reviews
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the account desired to retrieve reviews
          schema:
            type: string
      tags:
        - Coach
      responses:
        200:
          description: Coach reviews with that specific Id returned
    post:
      summary: Add review to specific coach
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the coach to be reviwed
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                rating:
                  type: number
      tags:
        - Coach
      responses:
        200:
          description: Review added to this specific coach
  /coaches/reviews/{id}:
    patch:
      summary: Edit a specific coach review
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the review
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                rating:
                  type: number

      tags:
        - Coach
      responses:
        200:
          description: Coach reviews with that specific Id edited successfully
    delete:
      summary: Delete review to specific coach
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the review
          schema:
            type: string

      tags:
        - Coach
      responses:
        200:
          description: Review deleted successfully
  /exercises:
    post:
      summary: Add a new exercise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                videoUrl:
                  type: string
                imgUrl:
                  type: string
      tags:
        - Exercise
      responses:
        200:
          description: Exercise added successfully
  /exercises/{id}:
    get:
      summary: Get a specific exercise
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the exercise
          schema:
            type: string
      tags:
        - Exercise
      responses:
        200:
          description: Exercise with that specific Id returned
    patch:
      summary: Edit a specific exercise
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the exercise to be edited
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                videoUrl:
                  type: string
                imgUrl:
                  type: string
      tags:
        - Exercise
      responses:
        200:
          description: Exercise with that specific Id edited successfully
    delete:
      summary: Delete a specific exercise
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the exercise to be deleted
          schema:
            type: string
      tags:
        - Exercise
      responses:
        200:
          description: Exercise with that specific Id deleted successfully
  /trainees:
    post:
      summary: Add new trainee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: number
                weight:
                  type: number
                height:
                  type: number
                gender:
                  type: string
                  enum:
                    - MALE
                    - FEMALE
                goal:
                  type: string
                  enum:
                    - WeightLoss
                    - StayFit
                    - GainMuscles
                    - GetStronger
      tags:
        - Trainee
      responses:
        200:
          description: Trainee account created successfully
  /trainees/{id}:
    get:
      summary: Get a specific trainee
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the trainee to be retrieved
          schema:
            type: string
      tags:
        - Trainee
      responses:
        200:
          description: Trainee with that specific Id returned
    patch:
      summary: Edit a specific trainee
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the account to be edited
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: number
                weight:
                  type: number
                height:
                  type: number
                gender:
                  type: string
                  enum:
                    - MALE
                    - FEMALE
                goal:
                  type: string
                  enum:
                    - LOSS
                    - FIT
      tags:
        - Trainee
      responses:
        200:
          description: Trainee with that specific Id edited successfully
  /requests:
    post:
      summary: add new program request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coachId:
                  type: string
      tags:
        - Program Request
      responses:
        200:
          description: Program Request added successfully
    get:
      summary: Get all program requests for the signed user(trainee or coach), response data depends on the role of user
      tags:
        - Program Request
      responses:
        200:
          description: All program requests returned
  /requests/{id}:
    get:
      summary: Get a specific program request
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the request to be retrieved
          schema:
            type: string
      tags:
        - Program Request
      responses:
        200:
          description: Program Request with that specific Id returned
  /requests/{id}/{status}:
    patch:
      summary: Edit a specific program request status
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the request to be edited
          schema:
            type: string
        - in: path
          name: status
          required: true
          description: enter status of the request to be edited
          schema:
            type: string
            enum:
              - accepted
              - rejected
      tags:
        - Program Request
      responses:
        200:
          description: Program Request with that specific Id status updated successfully
  /bills:
    post:
      summary: Add new bill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coachId:
                  type: string
                programId:
                  type: string
      tags:
        - Bill
      responses:
        200:
          description: Bill added successfully
    get:
      summary: Get all bills for the signed user(trainee or coach)
      tags:
        - Bill
      responses:
        200:
          description: All bills returned
  /bills/{id}:
    get:
      summary: Get a specific bill
      parameters:
        - in: path
          name: id
          required: true
          description: enter ID of the bill to be retrieved
          schema:
            type: string
      tags:
        - Bill
      responses:
        200:
          description: Bill with that specific Id returned
  /bills/{requestId}:
    post:
      summary: Add new bill with program request
      parameters:
        - in: path
          name: requestId
          required: true
          description: enter ID of the request to be used to create the bill
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coachId:
                  type: string
                programId:
                  type: string
      tags:
        - Bill
      responses:
        200:
          description: Bill added successfully
  /chats/:
    get:
      summary: Get all chats for the signed user(trainee or coach)
      tags:
        - Chat
      responses:
        200:
          description: All chats returned

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
